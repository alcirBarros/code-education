package br.com.integration.config;

import com.fasterxml.jackson.databind.ObjectMapper;
import feign.Client;
import org.apache.tomcat.util.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import javax.net.ssl.*;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.security.KeyStore;
import java.security.SecureRandom;


@Configuration
//@Profile({"hml", "prd"})
public class FeignClientConfig {

    @Autowired
    private ObjectMapper objectMapper;

    static {
        System.setProperty("jdk.tls.maxHandshakeMessageSize", "128000");
    }

    @Bean
    public Client feignClient(SSLContext sslContext) {
        return new Client.Default(sslContext.getSocketFactory(), null);
    }

    @Bean
    public SSLContext sslContext() throws Exception {

        CertificateP12 certificateP12 = certificateP12();
        CertificateJKS certificateJKS = certificateJKS();

        Base64 base64 = new Base64();

        KeyStore keystore = KeyStore.getInstance("PKCS12");
        InputStream keyStoreInputStream = new ByteArrayInputStream(base64.decode(certificateP12.keyStoreFile));
        keystore.load(keyStoreInputStream, certificateP12.password.toCharArray());

        KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
        keyManagerFactory.init(keystore, certificateP12.password.toCharArray());


        KeyStore trustStore = KeyStore.getInstance("JKS");
        InputStream trustStoreInputStream = new ByteArrayInputStream(base64.decode(certificateJKS.keyStoreFile));
        trustStore.load(trustStoreInputStream, certificateJKS.password.toCharArray());

        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
        trustManagerFactory.init(trustStore);

        SSLContext sslContext = SSLContext.getInstance("TLSv1.2");
        sslContext.init(keyManagerFactory.getKeyManagers(),  trustManagerFactory.getTrustManagers(), new SecureRandom());

        return sslContext;
    }


//    @Bean
//    public SSLSocketFactory sslSocketFactory(/*GetSecretValueResult secretValueResult*/) {
//        try {
//
//            CertificateP12 certificateP12 = certificateP12();
//            CertificateJKS certificateJKS = certificateJKS();
//
//            Base64 base64 = new Base64();
//            KeyStore clientStore = KeyStore.getInstance("PKCS12");
//            InputStream keyStoreInputStream = new ByteArrayInputStream(base64.decode(certificateP12.keyStoreFile));
//            clientStore.load(keyStoreInputStream, certificateP12.password.toCharArray());
//
//            KeyStore trustStore = KeyStore.getInstance("JKS");
//
//            InputStream trustStoreInputStream = new ByteArrayInputStream(base64.decode(certificateJKS.keyStoreFile));
//            trustStore.load(trustStoreInputStream, certificateJKS.password.toCharArray());
//
//            KeyManager[] keyManager = keyManager(clientStore, certificateP12.password);
//            TrustManager[] trustManager = trustManager(trustStore);
//
//            SSLContext sslContext = SSLContext.getInstance("TLSv1.2");
//            sslContext.init(keyManager, trustManager, new java.security.SecureRandom());
//
//            return sslContext.getSocketFactory();
//        } catch (Exception e) {
//            throw new KeyStoreCertificatedSslException();
//        }
//    }

    private CertificateP12 certificateP12(/*GetSecretValueResult secretValueResult*/) throws Exception {
//        JsonNode jsonObject = objectMapper.readTree(secretValueResult.getSecretString());
//        String keyStoreFile = jsonObject.get("alelo.p12").asText();
//        String password = jsonObject.get("alelo-password").asText();
        CertificateP12 certificateP12 = new CertificateP12();
        //Antigo
        //certificateP12.keyStoreFile = "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";

        //Certificado e CA
        //certificateP12.keyStoreFile = "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";

        //Cadeia de certificado completa
        certificateP12.keyStoreFile = "";

        certificateP12.password = "@lelo@123";
        return certificateP12;
    }

    private CertificateJKS certificateJKS(/*GetSecretValueResult secretValueResult*/) throws Exception {
//        JsonNode jsonObject = objectMapper.readTree(secretValueResult.getSecretString());
//        String keyStoreFile = jsonObject.get("server.jks").asText();
//        String password = jsonObject.get("server-password").asText();
        CertificateJKS certificateJKS = new CertificateJKS();
        certificateJKS.keyStoreFile = "";
        certificateJKS.password = "alelo@2020";
        return certificateJKS;
    }

    private KeyManager[] keyManager(KeyStore trustStore, String password) throws Exception {
        String defaultAlgorithm = KeyManagerFactory.getDefaultAlgorithm();
        KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(defaultAlgorithm);
        keyManagerFactory.init(trustStore, password.toCharArray());
        return keyManagerFactory.getKeyManagers();
    }

    private TrustManager[] trustManager(KeyStore trustStore) throws Exception {
        String defaultAlgorithm = TrustManagerFactory.getDefaultAlgorithm();
        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(defaultAlgorithm);
        trustManagerFactory.init(trustStore);
        TrustManager[] trustManagers = trustManagerFactory.getTrustManagers();
        X509TrustManager trustManager = (X509TrustManager) trustManagers[0];
        return new TrustManager[]{trustManager};
    }

    class CertificateP12 {
        String keyStoreFile;
        String password;
    }

    class CertificateJKS {
        String keyStoreFile;
        String password;
    }
}
