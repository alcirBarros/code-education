package br.com.ireport;

import br.com.ireport.avisoterminoobra.model.AvisoTerminoObra;
import br.com.ireport.model.ArquivoAnexado;
import br.com.ireport.comunicacaoinicioobra.model.AutorizacaoInicioObra;
import br.com.ireport.comunicacaoinicioobra.model.LocalizacaoObra;
import br.com.ireport.comunicacaoinicioobra.model.SubPrefeitura;
import br.com.ireport.util.ReportUtils;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import org.apache.commons.codec.binary.Base64;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class IreportApplication {

    public static void main(String[] args) {
        SpringApplication.run(IreportApplication.class, args);
        new IreportApplication().abrirRelatorioClientesDS();
    }

    public void abrirRelatorioATO() {
        try {
            InputStream inputStream = getClass().getResourceAsStream("/jasper/avisoterminoobra/AvisoTerminoObra.jasper");

            String imagemTitulo = new String("");
            ByteArrayInputStream imagemTituloByteArrayInputStream = new ByteArrayInputStream(Base64.decodeBase64(imagemTitulo.getBytes()));

            AvisoTerminoObra avisoTerminoObra = new AvisoTerminoObra();
            avisoTerminoObra.setId(1l);
            avisoTerminoObra.setImagem(imagemTituloByteArrayInputStream);
            avisoTerminoObra.setProtocolo("134567");
            avisoTerminoObra.setAssinaturaDigital("123456789");
            avisoTerminoObra.setDataHoraImpressao("01/01/2019 23:59:59");
            avisoTerminoObra.setDeclaracao("texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto ");

            List<AvisoTerminoObra> dados = Arrays.asList(avisoTerminoObra);

            Map<String, Object> parameters = new HashMap();
            // passando o datasource para o método de criação e exibição do relatório
            byte[] openReport = ReportUtils.openReport(inputStream, parameters, new JRBeanCollectionDataSource(dados));
            //below is the different part
            File someFile = new File("arquivo.pdf");
            FileOutputStream fos = new FileOutputStream(someFile);
            fos.write(openReport);
            fos.flush();
            fos.close();

        } catch (Exception exc) {
            exc.printStackTrace();
        }
    }

    public void abrirRelatorioClientesDS() {

        InputStream inputStream = getClass().getResourceAsStream("/jasper/comunicacaoinicioobra/ComunicacaoInicioObra.jasper");

        String imagemTitulo = new String("");
        ByteArrayInputStream imagemTituloByteArrayInputStream = new ByteArrayInputStream(Base64.decodeBase64(imagemTitulo.getBytes()));

        String imagemMapa = new String("");
        ByteArrayInputStream imagemMapabyteArrayInputStream = new ByteArrayInputStream(Base64.decodeBase64(imagemMapa.getBytes()));

        AutorizacaoInicioObra autorizacaoInicioObra = new AutorizacaoInicioObra();
        autorizacaoInicioObra.setId(1l);
        autorizacaoInicioObra.setImagem(imagemTituloByteArrayInputStream);
        autorizacaoInicioObra.setProtocolo("zxfguio");
        autorizacaoInicioObra.setAvisoNumero("sdfghjk");
        autorizacaoInicioObra.setTipoObra("werfghm");
        autorizacaoInicioObra.setPermissionaria("1234567");
        autorizacaoInicioObra.setCnpj("12345678");
        autorizacaoInicioObra.setDataPrevistainicioObra("1234567");
        autorizacaoInicioObra.setDataPrevistaTerminoObra("asdfghjk");
        autorizacaoInicioObra.setNaturezaOperacao("texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto texto ");
        autorizacaoInicioObra.setImagemMapa(imagemMapabyteArrayInputStream);
        autorizacaoInicioObra.setAssinaturaDigital("hgfddfghjqwefghjdfbn23ertghn5rfc3rfgbwertyuw3456789w456789qwert6789werty78");

        {
            LocalizacaoObra localizacaoObra = new LocalizacaoObra();
            localizacaoObra.setPrincipal("23456789");
            localizacaoObra.setVia("dsgwerfghnm");
            localizacaoObra.setCodigoLogradouro("45643643");
            localizacaoObra.setAlturaNumero("356456456");
            localizacaoObra.setTipoIntervensao("645643564356456");
            localizacaoObra.setOcupacaoVia("sdfghj");
            autorizacaoInicioObra.getLocalizacaoObraLit().add(localizacaoObra);
        }

        {
            LocalizacaoObra localizacaoObra = new LocalizacaoObra();
            localizacaoObra.setPrincipal("1234567890");
            localizacaoObra.setVia("1234567890");
            localizacaoObra.setCodigoLogradouro("123456789");
            localizacaoObra.setAlturaNumero("8743");
            localizacaoObra.setTipoIntervensao("123456789");
            localizacaoObra.setOcupacaoVia("sdfghjk");
            autorizacaoInicioObra.getLocalizacaoObraLit().add(localizacaoObra);
        }

        {
            SubPrefeitura localizacaoObra = new SubPrefeitura();
            localizacaoObra.setNomeSubPrefeitura("werghjk");
            autorizacaoInicioObra.getSubPrefeituraList().add(localizacaoObra);
        }

        {
            SubPrefeitura localizacaoObra = new SubPrefeitura();
            localizacaoObra.setNomeSubPrefeitura("werghjk");
            autorizacaoInicioObra.getSubPrefeituraList().add(localizacaoObra);
        }
        {
            SubPrefeitura localizacaoObra = new SubPrefeitura();
            localizacaoObra.setNomeSubPrefeitura("werghjk");
            autorizacaoInicioObra.getSubPrefeituraList().add(localizacaoObra);
        }
        {
            SubPrefeitura localizacaoObra = new SubPrefeitura();
            localizacaoObra.setNomeSubPrefeitura("werghjk");
            autorizacaoInicioObra.getSubPrefeituraList().add(localizacaoObra);
        }
        {
            SubPrefeitura localizacaoObra = new SubPrefeitura();
            localizacaoObra.setNomeSubPrefeitura("werghjk");
            autorizacaoInicioObra.getSubPrefeituraList().add(localizacaoObra);
        }
        {
            SubPrefeitura localizacaoObra = new SubPrefeitura();
            localizacaoObra.setNomeSubPrefeitura("werghjk");
            autorizacaoInicioObra.getSubPrefeituraList().add(localizacaoObra);
        }
        {
            SubPrefeitura localizacaoObra = new SubPrefeitura();
            localizacaoObra.setNomeSubPrefeitura("werghjk");
            autorizacaoInicioObra.getSubPrefeituraList().add(localizacaoObra);
        }

        {
            SubPrefeitura localizacaoObra = new SubPrefeitura();
            localizacaoObra.setNomeSubPrefeitura("wefghjm");
            autorizacaoInicioObra.getSubPrefeituraList().add(localizacaoObra);
        }

        {
            ArquivoAnexado arquivoAnexado = new ArquivoAnexado();
            arquivoAnexado.setNomeArquivo("098765432345678");
            autorizacaoInicioObra.getArquivoAnexadoList().add(arquivoAnexado);
        }

        {
            ArquivoAnexado arquivoAnexado = new ArquivoAnexado();
            arquivoAnexado.setNomeArquivo("098765432345678");
            autorizacaoInicioObra.getArquivoAnexadoList().add(arquivoAnexado);
        }

        List<AutorizacaoInicioObra> dados = Arrays.asList(autorizacaoInicioObra);

        Map<String, Object> parameters = new HashMap<String, Object>();

//
        try {
            // passando o datasource para o método de criação e exibição do relatório
            byte[] openReport = ReportUtils.openReport(inputStream, parameters, new JRBeanCollectionDataSource(dados));
            //below is the different part
            File someFile = new File("arquivo.pdf");
            FileOutputStream fos = new FileOutputStream(someFile);
            fos.write(openReport);
            fos.flush();
            fos.close();

        } catch (Exception exc) {
            exc.printStackTrace();
        }

    }

}
